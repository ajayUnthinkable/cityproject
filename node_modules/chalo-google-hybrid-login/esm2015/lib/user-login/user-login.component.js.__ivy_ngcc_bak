/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Output } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { GoogleLoginService } from '../chalo-google-hybrid-login.service';
import { StatusCode } from '../models';
export class UserLoginComponent {
    /**
     * @param {?} fb
     * @param {?} loginService
     */
    constructor(fb, loginService) {
        this.fb = fb;
        this.loginService = loginService;
        this.onSignInResponse = new EventEmitter();
        this.initializeForm();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    initializeForm() {
        this.loginForm = this.fb.group({
            userId: [null, Validators.required],
            staticPassword: [null, Validators.required]
        });
    }
    /**
     * @return {?}
     */
    onSubmit() {
        if (this.loginForm.valid) {
            /** @type {?} */
            let body = this.loginForm.getRawValue();
            this.loginService.validateUser({
                data: this.loginService.encryptCookie(JSON.stringify(body))
            }).subscribe((res) => {
                this.loginService.getUserToken(res).subscribe((data) => {
                    this.loginService.setCookieData(data);
                    this.onSignInResponse.emit({ code: StatusCode.Success, data });
                }, (err) => {
                    this.onSignInResponse.emit({ code: StatusCode.Failure, data: err });
                });
            }, (err) => {
                this.onSignInResponse.emit({ code: StatusCode.Failure, data: err });
            });
        }
    }
}
UserLoginComponent.decorators = [
    { type: Component, args: [{
                selector: 'user-login',
                template: "<div class=\"form-group\">\n  <form [formGroup]=\"loginForm\">\n    <mat-form-field appearance=\"outline\">\n      <input\n        matInput\n        placeholder=\"Enter User Id\"\n        formControlName=\"userId\"\n        required\n        autocomplete=\"off\"\n      />\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <input\n        matInput\n        type=\"password\"\n        placeholder=\"Enter Password\"\n        formControlName=\"staticPassword\"\n        required\n        autocomplete=\"off\"\n      />\n    </mat-form-field>\n    <div class=\"button-container\">\n      <button\n        class=\"cstm-button active\"\n        type=\"button\"\n        [disabled]=\"!loginForm.valid\"\n        (click)=\"onSubmit()\"\n      >\n        <a class=\"btn-text\">Continue</a>\n      </button>\n    </div>\n  </form>\n</div>\n",
                styles: [".form-group{text-align:center;font-size:12px}.form-control{height:40px;border-radius:2px;box-shadow:none}.form-control:focus{border-color:#eee}.cstm-button{background:0 0;border:1px solid #f47c21;border-radius:5px;text-align:center;width:100%;padding:8px 10px;display:inline-block;line-height:20px;margin-left:0!important}.btn-text{text-decoration:none;color:#f47c21;font-weight:700;font-size:14px}.cstm-button:disabled{cursor:not-allowed!important}.cstm-button.active{cursor:pointer;background:#f47c21}::ng-deep .mat-form-field-flex{border:0!important}::ng-deep .mat-form-field-infix{padding:8px 16px}::ng-deep .mat-form-field-infix:focus{outline:#f47c21 solid 2px}"]
            }] }
];
/** @nocollapse */
UserLoginComponent.ctorParameters = () => [
    { type: FormBuilder },
    { type: GoogleLoginService }
];
UserLoginComponent.propDecorators = {
    onSignInResponse: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    UserLoginComponent.prototype.loginForm;
    /** @type {?} */
    UserLoginComponent.prototype.onSignInResponse;
    /** @type {?} */
    UserLoginComponent.prototype.fb;
    /** @type {?} */
    UserLoginComponent.prototype.loginService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1sb2dpbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jaGFsby1nb29nbGUtaHlicmlkLWxvZ2luLyIsInNvdXJjZXMiOlsibGliL3VzZXItbG9naW4vdXNlci1sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsV0FBVyxFQUEwQixVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNqRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUMxRSxPQUFPLEVBQXVCLFVBQVUsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQU81RCxNQUFNOzs7OztJQUlKLFlBQ1UsSUFDQTtRQURBLE9BQUUsR0FBRixFQUFFO1FBQ0YsaUJBQVksR0FBWixZQUFZO2dDQUowQyxJQUFJLFlBQVksRUFBdUI7UUFNckcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0tBQ3ZCOzs7O0lBRUQsUUFBUTtLQUNQOzs7O0lBRUQsY0FBYztRQUNaLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7WUFDN0IsTUFBTSxFQUFFLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUM7WUFDbkMsY0FBYyxFQUFFLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUM7U0FDNUMsQ0FBQyxDQUFBO0tBQ0g7Ozs7SUFFRCxRQUFRO1FBQ04sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDOztZQUN6QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3hDLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDO2dCQUM3QixJQUFJLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUM1RCxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQ25CLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO29CQUNyRCxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQTtvQkFDckMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksRUFBRSxVQUFVLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7aUJBQy9ELEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRTtvQkFDVCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7aUJBQ3JFLENBQUMsQ0FBQzthQUNKLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRTtnQkFDVCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7YUFDckUsQ0FBQyxDQUFBO1NBQ0g7S0FDRjs7O1lBMUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIsbzJCQUEwQzs7YUFFM0M7Ozs7WUFSUSxXQUFXO1lBQ1gsa0JBQWtCOzs7K0JBVXhCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBGb3JtQ29udHJvbCwgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgR29vZ2xlTG9naW5TZXJ2aWNlIH0gZnJvbSAnLi4vY2hhbG8tZ29vZ2xlLWh5YnJpZC1sb2dpbi5zZXJ2aWNlJztcbmltcG9ydCB7IEdvb2dsZUxvZ2luUmVzcG9uc2UsIFN0YXR1c0NvZGUgfSBmcm9tICcuLi9tb2RlbHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd1c2VyLWxvZ2luJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VzZXItbG9naW4uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi91c2VyLWxvZ2luLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBVc2VyTG9naW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBsb2dpbkZvcm06IEZvcm1Hcm91cDtcbiAgQE91dHB1dCgpIG9uU2lnbkluUmVzcG9uc2U6IEV2ZW50RW1pdHRlcjxHb29nbGVMb2dpblJlc3BvbnNlPiA9IG5ldyBFdmVudEVtaXR0ZXI8R29vZ2xlTG9naW5SZXNwb25zZT4oKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGZiOiBGb3JtQnVpbGRlcixcbiAgICBwcml2YXRlIGxvZ2luU2VydmljZTogR29vZ2xlTG9naW5TZXJ2aWNlPGFueT5cbiAgKSB7XG4gICAgdGhpcy5pbml0aWFsaXplRm9ybSgpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICBpbml0aWFsaXplRm9ybSgpIHtcbiAgICB0aGlzLmxvZ2luRm9ybSA9IHRoaXMuZmIuZ3JvdXAoe1xuICAgICAgdXNlcklkOiBbbnVsbCwgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXG4gICAgICBzdGF0aWNQYXNzd29yZDogW251bGwsIFZhbGlkYXRvcnMucmVxdWlyZWRdXG4gICAgfSlcbiAgfVxuXG4gIG9uU3VibWl0KCkge1xuICAgIGlmICh0aGlzLmxvZ2luRm9ybS52YWxpZCkge1xuICAgICAgbGV0IGJvZHkgPSB0aGlzLmxvZ2luRm9ybS5nZXRSYXdWYWx1ZSgpO1xuICAgICAgdGhpcy5sb2dpblNlcnZpY2UudmFsaWRhdGVVc2VyKHtcbiAgICAgICAgZGF0YTogdGhpcy5sb2dpblNlcnZpY2UuZW5jcnlwdENvb2tpZShKU09OLnN0cmluZ2lmeShib2R5KSlcbiAgICAgIH0pLnN1YnNjcmliZSgocmVzKSA9PiB7XG4gICAgICAgIHRoaXMubG9naW5TZXJ2aWNlLmdldFVzZXJUb2tlbihyZXMpLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xuICAgICAgICAgIHRoaXMubG9naW5TZXJ2aWNlLnNldENvb2tpZURhdGEoZGF0YSlcbiAgICAgICAgICB0aGlzLm9uU2lnbkluUmVzcG9uc2UuZW1pdCh7IGNvZGU6IFN0YXR1c0NvZGUuU3VjY2VzcywgZGF0YSB9KVxuICAgICAgICB9LCAoZXJyKSA9PiB7XG4gICAgICAgICAgdGhpcy5vblNpZ25JblJlc3BvbnNlLmVtaXQoeyBjb2RlOiBTdGF0dXNDb2RlLkZhaWx1cmUsIGRhdGE6IGVyciB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LCAoZXJyKSA9PiB7XG4gICAgICAgIHRoaXMub25TaWduSW5SZXNwb25zZS5lbWl0KHsgY29kZTogU3RhdHVzQ29kZS5GYWlsdXJlLCBkYXRhOiBlcnIgfSk7XG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG59XG4iXX0=