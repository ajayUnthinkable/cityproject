{"version":3,"file":"ngx-cookie-service.umd.js","sources":["~/ngx-cookie-service/lib/cookie-service/cookie.service.ts"],"names":["isPlatformBrowser","Injectable","Inject","DOCUMENT","InjectionToken","PLATFORM_ID"],"mappings":";;;;;;AAAA;AACA;AACA;AAGA,IAAA,aAAA,IAAA,YAAA;AAAE;AAAQ;AAA2B;AAA6B;AAAQ,IAQ1E,SAAA,aAAA,CAGa,QAAU,EAEV,UAAkC,EAL/C;AAAE,QAGW,IAAb,CAAA,QAAa,GAAA,QAAA,CAAU;AACL,QACL,IAAb,CAAA,UAAa,GAAA,UAAA,CAAkC;AAGtC,QAJL,IAAI,CAAC,oBAAoB,GAAGA,wBAAiB,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;AACrE,KAAG;AACH;AACI;AACI;AAEA;AAAQ,IAAhB,aAAA,CAAA,SAAA,CAAA,KAIG,GAJH,UAIG,IAAA,EAJH;AAAE,QACE,IAIK,CAAA,IAAE,CAAI,oBAAqB,EAAE;AAEtC,YALM,OAIO,KAAA,CAAM;AACA,SAJd;AACL,QACI,IAAI,GAIG,kBAAA,CAAoB,IAAA,CAAK,CAAE;AAI3B,QANP,qBAIM,MAAA,GAAiB,IAAA,CAAK,eAAC,CAAgB,IAAA,CAAK,CAAE;AAIrD,QAPC,qBAIM,MAAA,GAAkB,MAAA,CAAO,IAAC,CAAK,IAAA,CAAK,QAAC,CAAQ,MAAC,CAAM,CAAE;AAIrD,QANP,OAIO,MAAA,CAAO;AAElB,KALG,CAAH;AAAC;AAEA;AACI;AAEA;AAAQ,IAAb,aAAA,CAAA,SAAA,CAAA,GAKG,GALH,UAKG,IAAA,EALH;AAAE,QACE,IAKK,IAAA,CAAK,oBAAC,IAAuB,IAAA,CAAK,KAAC,CAAM,IAAA,CAAO,EAAE;AAE/C,YANN,IAAI,GAKG,kBAAA,CAAoB,IAAA,CAAK,CAAE;AAAC,YAHnC,qBAKM,MAAA,GAAiB,IAAA,CAAK,eAAC,CAAgB,IAAA,CAAK,CAAE;AAMjD,YAVH,qBAKM,MAAA,GAA0B,MAAA,CAAO,IAAC,CAAK,IAAA,CAAK,QAAC,CAAQ,MAAC,CAAM,CAAE;AAM/C,YATrB,OAKO,kBAAA,CAAoB,MAAA,CAAQ,CAAA,CAAE,CAAE,CAAE;AAIrC,SARL;AAAC,aAKK;AAAE,YAJP,OAKO,EAAA,CAAG;AACH,SALR;AACL,KAAG,CAAH;AAAC;AAEA;AAEA;AAAQ,IAAT,aAAA,CAAA,SAAA,CAAA,MAMG,GANH,YAAA;AAAE,QACE,IAMK,CAAA,IAAE,CAAI,oBAAqB,EAAE;AACC,YANjC,OAMO,EAAA,CAAG;AAAC,SALZ;AACL,QACI,qBAMM,OAAA,GAAc,EAAA,CAAG;AAAC,QALxB,qBAMM,QAAA,GAAgB,IAAA,CAAK,QAAC,CAAQ;AAAC,QAJrC,IAMK,QAAA,CAAS,MAAC,IAAS,QAAA,CAAS,MAAC,KAAU,EAAG,EAAE;AAAE,YALjD,qBAMM,KAAA,GAAuB,QAAA,CAAS,MAAC,CAAM,KAAC,CAAK,GAAC,CAAG,CAAC;AAAC,YAJzD,KAMM,qBAAI,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,KAAA,CAAM,MAAC,EAAO,CAAA,IAAK,CAAA,EAAI;AAKjC,gBAVT,qBAMM,aAAA,GAA+B,KAAA,CAAO,CAAA,CAAE,CAAE,KAAC,CAAK,GAAC,CAAG,CAAC;AAK/D,gBATI,aAAa,CAME,CAAA,CAAE,GAAI,aAAA,CAAe,CAAA,CAAE,CAAE,OAAC,CAAQ,IAAA,EAAM,EAAA,CAAG,CAAE;AAG1C,gBARlB,OAAO,CAME,kBAAA,CAAoB,aAAA,CAAe,CAAA,CAAE,CAAE,CAAE,GAAI,kBAAA,CAAoB,aAAA,CAAe,CAAA,CAAE,CAAE,CAAE;AAG1E,aARtB;AACP,SAAK;AACL,QACI,OAMO,OAAA,CAAQ;AAAC,KALjB,CAAH;AAAC;AAEA;AACI;AACI;AACI;AACI;AACI;AACI;AAIpB;AACC;AAAQ,IAFd,aAAA,CAAA,SAAA,CAAA,GAMG,GANH,UACI,IAAY,EACZ,KAAa,EACb,OAAuB,EACvB,IAAa,EACb,MAAe,EACf,MAAgB,EAChB,QAA4C,EAPhD;AAAE,QAOE,IAAJ,QAAA,KAAA,KAAA,CAAA,EAAI,EAAA,QAAJ,GAAA,MAAgD,CAAhD,EAAA;AAAC,QAEG,IAMK,CAAA,IAAE,CAAI,oBAAqB,EAAE;AACnB,YANb,OAAO;AACb,SAAK;AACL,QACI,qBAMI,YAAA,GAAuB,kBAAA,CAAoB,IAAA,CAAK,GAAI,GAAA,GAAM,kBAAA,CAAoB,KAAA,CAAM,GAAI,GAAA,CAAI;AAEpF,QANZ,IAMK,OAAQ,EAAE;AAAE,YALf,IAMK,OAAO,OAAA,KAAY,QAAS,EAAE;AAI/B,gBATF,qBAMM,WAAA,GAAoB,IAAI,IAAA,CAAM,IAAI,IAAA,EAAK,CAAE,OAAC,EAAO,GAAI,OAAA,GAAU,IAAA,GAAO,EAAA,GAAK,EAAA,GAAK,EAAA,CAAG,CAAE;AAO/F,gBAXI,YAAY,IAMI,UAAA,GAAa,WAAA,CAAY,WAAC,EAAW,GAAI,GAAA,CAAI;AAIpE,aATM;AAAC,iBAMK;AAAE,gBALP,YAAY,IAMI,UAAA,GAAa,OAAA,CAAQ,WAAC,EAAW,GAAI,GAAA,CAAI;AAG1B,aARhC;AACP,SAAK;AACL,QACI,IAMK,IAAK,EAAE;AAEL,YAPL,YAAY,IAMI,OAAA,GAAU,IAAA,GAAO,GAAA,CAAI;AAEpB,SAPlB;AACL,QACI,IAMK,MAAO,EAAE;AAEL,YAPP,YAAY,IAMI,SAAA,GAAY,MAAA,GAAS,GAAA,CAAI;AACA,SAN1C;AACL,QACI,IAMK,MAAO,EAAE;AAAE,YALd,YAAY,IAMI,SAAA,CAAU;AAEP,SAPpB;AACL,QACI,YAAY,IAMI,WAAA,GAAc,QAAA,GAAW,GAAA,CAAI;AACjC,QALZ,IAAI,CAMC,QAAC,CAAQ,MAAC,GAAQ,YAAA,CAAa;AAElB,KAPnB,CAAH;AAAC;AAEA;AACI;AACI;AACI;AAEA;AAAQ,IAArB,aAAA,CAAA,SAAA,CAAA,MAMG,GANH,UAMG,IAAA,EAAA,IAAA,EAAA,MAAA,EANH;AAAE,QACE,IAMK,CAAA,IAAE,CAAI,oBAAqB,EAAE;AAEpC,YAPI,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAMC,GAAC,CAAI,IAAA,EAAM,EAAA,EAAI,IAAI,IAAA,CAAK,+BAAC,CAA+B,EAAE,IAAA,EAAM,MAAA,EAAQ,SAAA,EAAW,KAAA,CAAM,CAAE;AAG/F,KARF,CAAH;AAAC;AAEA;AACI;AACI;AAEA;AAAQ,IAAjB,aAAA,CAAA,SAAA,CAAA,SAMG,GANH,UAMG,IAAA,EAAA,MAAA,EANH;AAAE,QACE,IAMK,CAAA,IAAE,CAAI,oBAAqB,EAAE;AAAE,YALlC,OAAO;AACb,SAAK;AACL,QACI,qBAMM,OAAA,GAAe,IAAA,CAAK,MAAC,EAAM,CAAE;AAGb,QAPtB,KAMM,qBAAM,UAAA,IAAc,OAAQ,EAAE;AAEjC,YAPD,IAMK,OAAA,CAAQ,cAAC,CAAe,UAAA,CAAa,EAAE;AAGhD,gBARM,IAAI,CAMC,MAAC,CAAO,UAAA,EAAY,IAAA,EAAM,MAAA,CAAO,CAAE;AAElB,aAPvB;AACP,SAAK;AACL,KAAG,CAAH;AAAC;AAEA;AACI;AAEA;AAAQ,IAOV,aAAH,CAAA,SAAA,CAAA,eAAG,GAAA,UAAA,IAAA,EAAH;AAAE,QANE,qBAOM,WAAA,GAAsB,IAAA,CAAK,OAAC,CAAQ,wCAAA,EAA0C,MAAA,CAAO,CAAE;AAGtB,QARvE,OAOO,IAAI,MAAA,CAAQ,MAAA,GAAS,WAAA,GAAc,QAAA,GAAW,WAAA,GAAc,gBAAA,EAAkB,GAAA,CAAI,CAAE;AACH,KAPzF;;;;;;;;;;;kCAAH;AAAC;AACsB,CAjKvB,EAAA,CAAA,CAAA,AA0KE;AAFK,AAGP;SAHA,CAAA,VAKC;AAAe;CALT,GAAoC,MAN3C,EAOE,IAAA,EAAMC,eAAA,EAAW,GANlB,tCASA,aAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;AACC,IALF,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAEC,WAAM,EAAE,IAAI,EAAE,CAACC,eAAQ,EAAG,EAAE,EAAG,EAAC;AACvE,IAAA,EAAC,IAAI,EAAEC,mBAAc,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAEF,WAAM,EAAE,IAAI,EAAE,CAACG,gBAAW,EAAG,EAAE,EAAG,EAAC;AAC/E,CAAC,CAAD,EAAC,CAAC;AACF;AAAC;AAEoC;AAAC;AAGpC;AAAC;AACE","sourcesContent":["// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\n\n\nimport { Injectable, Inject, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nexport class CookieService {\nprivate readonly documentIsAccessible: boolean;\n/**\n * @param {?} document\n * @param {?} platformId\n */\nconstructor(\nprivate document: any,\nprivate platformId: InjectionToken<Object>,\n  ) {\n    this.documentIsAccessible = isPlatformBrowser( this.platformId );\n  }\n/**\n * @param {?} name Cookie name\n * @return {?}\n */\ncheck( name: string ): boolean {\n    if ( !this.documentIsAccessible ) {\n      return false;\n    }\n\n    name = encodeURIComponent( name );\n\n    const /** @type {?} */ regExp: RegExp = this.getCookieRegExp( name );\n    const /** @type {?} */ exists: boolean = regExp.test( this.document.cookie );\n\n    return exists;\n  }\n/**\n * @param {?} name Cookie name\n * @return {?}\n */\nget( name: string ): string {\n    if ( this.documentIsAccessible && this.check( name ) ) {\n      name = encodeURIComponent( name );\n\n      const /** @type {?} */ regExp: RegExp = this.getCookieRegExp( name );\n      const /** @type {?} */ result: RegExpExecArray = regExp.exec( this.document.cookie );\n\n      return decodeURIComponent( result[ 1 ] );\n    } else {\n      return '';\n    }\n  }\n/**\n * @return {?}\n */\ngetAll(): {} {\n    if ( !this.documentIsAccessible ) {\n      return {};\n    }\n\n    const /** @type {?} */ cookies: {} = {};\n    const /** @type {?} */ document: any = this.document;\n\n    if ( document.cookie && document.cookie !== '' ) {\n      const /** @type {?} */ split: Array<string> = document.cookie.split(';');\n\n      for ( let /** @type {?} */ i = 0; i < split.length; i += 1 ) {\n        const /** @type {?} */ currentCookie: Array<string> = split[ i ].split('=');\n\n        currentCookie[ 0 ] = currentCookie[ 0 ].replace( /^ /, '' );\n        cookies[ decodeURIComponent( currentCookie[ 0 ] ) ] = decodeURIComponent( currentCookie[ 1 ] );\n      }\n    }\n\n    return cookies;\n  }\n/**\n * @param {?} name     Cookie name\n * @param {?} value    Cookie value\n * @param {?=} expires  Number of days until the cookies expires or an actual `Date`\n * @param {?=} path     Cookie path\n * @param {?=} domain   Cookie domain\n * @param {?=} secure   Secure flag\n * @param {?=} sameSite OWASP samesite token `Lax`, `None`, or `Strict`. Defaults to `None`\n * @return {?}\n */\nset(\n    name: string,\n    value: string,\n    expires?: number | Date,\n    path?: string,\n    domain?: string,\n    secure?: boolean,\n    sameSite: 'Lax' | 'None' | 'Strict' = 'None'\n  ): void {\n    if ( !this.documentIsAccessible ) {\n      return;\n    }\n\n    let /** @type {?} */ cookieString: string = encodeURIComponent( name ) + '=' + encodeURIComponent( value ) + ';';\n\n    if ( expires ) {\n      if ( typeof expires === 'number' ) {\n        const /** @type {?} */ dateExpires: Date = new Date( new Date().getTime() + expires * 1000 * 60 * 60 * 24 );\n\n        cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n      } else {\n        cookieString += 'expires=' + expires.toUTCString() + ';';\n      }\n    }\n\n    if ( path ) {\n      cookieString += 'path=' + path + ';';\n    }\n\n    if ( domain ) {\n      cookieString += 'domain=' + domain + ';';\n    }\n\n    if ( secure ) {\n      cookieString += 'secure;';\n    }\n\n    cookieString += 'sameSite=' + sameSite + ';';\n\n    this.document.cookie = cookieString;\n  }\n/**\n * @param {?} name   Cookie name\n * @param {?=} path   Cookie path\n * @param {?=} domain Cookie domain\n * @return {?}\n */\ndelete( name: string, path?: string, domain?: string ): void {\n    if ( !this.documentIsAccessible ) {\n      return;\n    }\n\n    this.set( name, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain, undefined, 'Lax' );\n  }\n/**\n * @param {?=} path   Cookie path\n * @param {?=} domain Cookie domain\n * @return {?}\n */\ndeleteAll( path?: string, domain?: string ): void {\n    if ( !this.documentIsAccessible ) {\n      return;\n    }\n\n    const /** @type {?} */ cookies: any = this.getAll();\n\n    for ( const /** @type {?} */ cookieName in cookies ) {\n      if ( cookies.hasOwnProperty( cookieName ) ) {\n        this.delete( cookieName, path, domain );\n      }\n    }\n  }\n/**\n * @param {?} name Cookie name\n * @return {?}\n */\nprivate getCookieRegExp( name: string ): RegExp {\n    const /** @type {?} */ escapedName: string = name.replace( /([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/ig, '\\\\$1' );\n\n    return new RegExp( '(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g' );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: InjectionToken, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n];\n}\n\nfunction CookieService_tsickle_Closure_declarations() {\n/** @type {?} */\nCookieService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCookieService.ctorParameters;\n/** @type {?} */\nCookieService.prototype.documentIsAccessible;\n/** @type {?} */\nCookieService.prototype.document;\n/** @type {?} */\nCookieService.prototype.platformId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}