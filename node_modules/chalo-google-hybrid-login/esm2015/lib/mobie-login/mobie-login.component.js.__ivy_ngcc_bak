/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Output, Input } from '@angular/core';
import { FormControl, Validators, FormBuilder } from '@angular/forms';
import { GoogleLoginService } from '../chalo-google-hybrid-login.service';
import { StatusCode } from '../models';
export class MobieLoginComponent {
    /**
     * @param {?} fb
     * @param {?} loginService
     */
    constructor(fb, loginService) {
        this.fb = fb;
        this.loginService = loginService;
        this.onSignInResponse = new EventEmitter();
        this.showGoogleSignIn = new EventEmitter();
        this.showsendOtpForm = true;
        this.sendOtpForm = fb.group({
            number: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10)])
        });
        this.verifyOtpForm = fb.group({
            otp: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6)])
        });
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes['showsendOtpForm']) {
            this.sendOtpForm.reset();
            this.verifyOtpForm.reset();
        }
    }
    /**
     * @param {?} hideSendOtpForm
     * @return {?}
     */
    sendOtp(hideSendOtpForm) {
        /** @type {?} */
        let selectedPhoneNo = this.sendOtpForm.get('number').value;
        this.number = selectedPhoneNo ? selectedPhoneNo : this.number;
        this.loginService.sendOtp(this.number).subscribe((res) => {
            if (hideSendOtpForm) {
                this.showsendOtpForm = false;
                // this.showGoogleSignIn.emit(false);
            }
        }, err => {
            this.showsendOtpForm = true;
            // this.showGoogleSignIn.emit(true)
        });
    }
    /**
     * @return {?}
     */
    verifyOtp() {
        /** @type {?} */
        let otp = this.verifyOtpForm.get('otp').value ? this.verifyOtpForm.get('otp').value : '';
        this.loginService.getMobileToken(otp, this.number).subscribe((data) => {
            this.onSignInResponse.emit({ code: StatusCode.Success, data });
        }, (err) => {
            this.onSignInResponse.emit({ code: StatusCode.Failure, data: err });
        });
    }
    /**
     * @param {?} value
     * @return {?}
     */
    onOtpChange(value) {
        if (value.length === 6) {
            this.verifyOtpForm.get('otp').setValue(value);
        }
        else {
            this.verifyOtpForm.get('otp').setValue('');
        }
        this.verifyOtpForm.get('otp').updateValueAndValidity();
    }
}
MobieLoginComponent.decorators = [
    { type: Component, args: [{
                selector: 'mobie-login',
                template: "<div class=\"form-group\">\n  <form *ngIf=\"showsendOtpForm\"  [formGroup]=\"sendOtpForm\">\n    <div>\n     \n      <mat-form-field appearance=\"outline\">\n        <input matInput placeholder=\"Enter mobile number\" formControlName=\"number\"  required autocomplete=\"off\" numberDirective maxlength=\"10\">\n        <span matPrefix>+91&nbsp;</span>\n      </mat-form-field>\n      <div class=\"button-container\">\n        <button class=\"cstm-button active\" type=\"button\" (click)=\"sendOtp(true)\" [disabled]=\"!sendOtpForm.valid\"><a class=\"btn-text\">Continue</a>\n        </button>\n      </div>\n    </div>\n  </form>\n  <form  *ngIf=\"!showsendOtpForm\" [formGroup]=\"verifyOtpForm\">\n    <div class=\"sign-in-text\">Please enter the OTP sent to {{number}}</div>\n    <div class=\"otp-row\">\n      <ng-otp-input  (onInputChange)=\"onOtpChange($event)\"  [config]=\"{length:6,allowNumbersOnly:true,inputClass:'otpInput',containerClass:'otp-wrapper'}\"></ng-otp-input>\n    </div>\n    <div class=\"button-container\">\n      <button class=\"cstm-button active\" type=\"button\" (click)=\"verifyOtp()\" [disabled]=\"!verifyOtpForm.valid\"><a class=\"btn-text\">Verify</a>\n      </button>\n    </div>\n    <div class=\"anchor-div\"><a class=\"anchor-text\" >Did not recieve OTP? <span class=\"resendText\" (click)=\"sendOtp(false)\">Resend OTP</span></a></div>\n\n  </form>\n</div>\n",
                styles: [".form-group{text-align:center;font-size:12px}.form-control{height:40px;border-radius:2px;box-shadow:none}.form-control:focus{border-color:#eee}.title{font-weight:600;font-size:16px}.anchor-div{margin-top:10px;font-size:14px}.resendText{color:#f47c21}.anchor-text{cursor:pointer;color:#000}.button-container{display:flex;justify-content:center}.cstm-button{background:0 0;border:1px solid #f47c21;border-radius:5px;text-align:center;width:100%;padding:8px 10px;display:inline-block;line-height:20px;margin-left:0!important}.btn-text{text-decoration:none;color:#f47c21;font-weight:700;font-size:14px}.cstm-button:disabled{cursor:not-allowed!important}.cstm-button.active{cursor:pointer;background:#f47c21}.cstm-button.active .btn-text{color:#fff}.cstm-button:hover{cursor:pointer;background:#f47c21}.cstm-button:hover .btn-text{color:#fff}.cstm-button:focus{outline:0}.phone-wrapper{display:flex;justify-content:space-around;align-items:baseline}.otp-row{display:flex;flex-direction:row;justify-content:center;width:100%;margin:10px auto 25px}::ng-deep .mat-form-field-flex{border:0!important}::ng-deep .mat-form-field-infix{padding:8px 16px}::ng-deep .mat-form-field-infix:focus{outline:#f47c21 solid 2px}"]
            }] }
];
/** @nocollapse */
MobieLoginComponent.ctorParameters = () => [
    { type: FormBuilder },
    { type: GoogleLoginService }
];
MobieLoginComponent.propDecorators = {
    onSignInResponse: [{ type: Output }],
    showGoogleSignIn: [{ type: Output }],
    showsendOtpForm: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    MobieLoginComponent.prototype.onSignInResponse;
    /** @type {?} */
    MobieLoginComponent.prototype.showGoogleSignIn;
    /** @type {?} */
    MobieLoginComponent.prototype.showsendOtpForm;
    /** @type {?} */
    MobieLoginComponent.prototype.sendOtpForm;
    /** @type {?} */
    MobieLoginComponent.prototype.verifyOtpForm;
    /** @type {?} */
    MobieLoginComponent.prototype.showVerifyOtpForm;
    /** @type {?} */
    MobieLoginComponent.prototype.number;
    /** @type {?} */
    MobieLoginComponent.prototype.fb;
    /** @type {?} */
    MobieLoginComponent.prototype.loginService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9iaWUtbG9naW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vY2hhbG8tZ29vZ2xlLWh5YnJpZC1sb2dpbi8iLCJzb3VyY2VzIjpbImxpYi9tb2JpZS1sb2dpbi9tb2JpZS1sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsWUFBWSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQzlGLE9BQU8sRUFBYSxXQUFXLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2pGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzFFLE9BQU8sRUFBdUIsVUFBVSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBTzVELE1BQU07Ozs7O0lBVUosWUFBb0IsRUFBZSxFQUFVLFlBQXFDO1FBQTlELE9BQUUsR0FBRixFQUFFLENBQWE7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBeUI7Z0NBVGxCLElBQUksWUFBWSxFQUF1QjtnQ0FDdkQsSUFBSSxZQUFZLEVBQU87K0JBQ25DLElBQUk7UUFRdEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDO1lBQzFCLE1BQU0sRUFBRSxJQUFJLFdBQVcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLEVBQUUsVUFBVSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ3ZHLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQztZQUM1QixHQUFHLEVBQUUsSUFBSSxXQUFXLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNsRyxDQUFDLENBQUM7S0FDSjs7OztJQUVELFFBQVE7S0FDUDs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDekIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUM1QjtLQUNGOzs7OztJQUdELE9BQU8sQ0FBQyxlQUFlOztRQUNyQixJQUFJLGVBQWUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFFM0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxlQUFlLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUM5RCxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7WUFDdkQsRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztnQkFDcEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7O2FBRTlCO1NBQ0YsRUFBRSxHQUFHLENBQUMsRUFBRTtZQUNQLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDOztTQUU3QixDQUFDLENBQUE7S0FDSDs7OztJQUVELFNBQVM7O1FBQ1AsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFBLENBQUMsQ0FBQSxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUEsQ0FBQyxDQUFBLEVBQUUsQ0FBQztRQUNyRixJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ3BFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1NBQ2hFLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNULElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztTQUNyRSxDQUFDLENBQUM7S0FDSjs7Ozs7SUFFRCxXQUFXLENBQUMsS0FBSztRQUNmLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUE7U0FDOUM7UUFBQSxJQUFJLENBQUEsQ0FBQztZQUNKLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQTtTQUMzQztRQUNELElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLHNCQUFzQixFQUFFLENBQUM7S0FFeEQ7OztZQXBFRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLGc0Q0FBMkM7O2FBRTVDOzs7O1lBUjRDLFdBQVc7WUFDL0Msa0JBQWtCOzs7K0JBU3hCLE1BQU07K0JBQ04sTUFBTTs4QkFDTixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBJbnB1dCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCwgVmFsaWRhdG9ycywgRm9ybUJ1aWxkZXIgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBHb29nbGVMb2dpblNlcnZpY2UgfSBmcm9tICcuLi9jaGFsby1nb29nbGUtaHlicmlkLWxvZ2luLnNlcnZpY2UnO1xuaW1wb3J0IHsgR29vZ2xlTG9naW5SZXNwb25zZSwgU3RhdHVzQ29kZSB9IGZyb20gJy4uL21vZGVscyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21vYmllLWxvZ2luJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21vYmllLWxvZ2luLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbW9iaWUtbG9naW4uY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIE1vYmllTG9naW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAT3V0cHV0KCkgb25TaWduSW5SZXNwb25zZTogRXZlbnRFbWl0dGVyPEdvb2dsZUxvZ2luUmVzcG9uc2U+ID0gbmV3IEV2ZW50RW1pdHRlcjxHb29nbGVMb2dpblJlc3BvbnNlPigpO1xuICBAT3V0cHV0KCkgc2hvd0dvb2dsZVNpZ25JbjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQElucHV0KCkgc2hvd3NlbmRPdHBGb3JtOiBib29sZWFuID0gdHJ1ZTtcblxuICBzZW5kT3RwRm9ybTogRm9ybUdyb3VwO1xuICB2ZXJpZnlPdHBGb3JtOiBGb3JtR3JvdXA7XG4gIHNob3dWZXJpZnlPdHBGb3JtOiBib29sZWFuO1xuICBudW1iZXI6IGFueTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZiOiBGb3JtQnVpbGRlciwgcHJpdmF0ZSBsb2dpblNlcnZpY2U6IEdvb2dsZUxvZ2luU2VydmljZTxhbnk+KSB7XG4gICAgdGhpcy5zZW5kT3RwRm9ybSA9IGZiLmdyb3VwKHtcbiAgICAgIG51bWJlcjogbmV3IEZvcm1Db250cm9sKCcnLCBbVmFsaWRhdG9ycy5yZXF1aXJlZCwgVmFsaWRhdG9ycy5taW5MZW5ndGgoMTApLCBWYWxpZGF0b3JzLm1heExlbmd0aCgxMCldKVxuICAgIH0pO1xuXG4gICAgdGhpcy52ZXJpZnlPdHBGb3JtID0gZmIuZ3JvdXAoe1xuICAgICAgb3RwOiBuZXcgRm9ybUNvbnRyb2woJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLm1pbkxlbmd0aCg2KSwgVmFsaWRhdG9ycy5tYXhMZW5ndGgoNildKVxuICAgIH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGNoYW5nZXNbJ3Nob3dzZW5kT3RwRm9ybSddKSB7XG4gICAgICB0aGlzLnNlbmRPdHBGb3JtLnJlc2V0KCk7XG4gICAgICB0aGlzLnZlcmlmeU90cEZvcm0ucmVzZXQoKTtcbiAgICB9XG4gIH1cblxuXG4gIHNlbmRPdHAoaGlkZVNlbmRPdHBGb3JtKSB7XG4gICAgbGV0IHNlbGVjdGVkUGhvbmVObyA9IHRoaXMuc2VuZE90cEZvcm0uZ2V0KCdudW1iZXInKS52YWx1ZTtcblxuICAgIHRoaXMubnVtYmVyID0gc2VsZWN0ZWRQaG9uZU5vID8gc2VsZWN0ZWRQaG9uZU5vIDogdGhpcy5udW1iZXI7XG4gICAgdGhpcy5sb2dpblNlcnZpY2Uuc2VuZE90cCh0aGlzLm51bWJlcikuc3Vic2NyaWJlKChyZXMpID0+IHtcbiAgICAgIGlmIChoaWRlU2VuZE90cEZvcm0pIHtcbiAgICAgICAgdGhpcy5zaG93c2VuZE90cEZvcm0gPSBmYWxzZTtcbiAgICAgICAgLy8gdGhpcy5zaG93R29vZ2xlU2lnbkluLmVtaXQoZmFsc2UpO1xuICAgICAgfVxuICAgIH0sIGVyciA9PiB7XG4gICAgICB0aGlzLnNob3dzZW5kT3RwRm9ybSA9IHRydWU7XG4gICAgICAvLyB0aGlzLnNob3dHb29nbGVTaWduSW4uZW1pdCh0cnVlKVxuICAgIH0pXG4gIH1cblxuICB2ZXJpZnlPdHAoKSB7XG4gICAgbGV0IG90cCA9IHRoaXMudmVyaWZ5T3RwRm9ybS5nZXQoJ290cCcpLnZhbHVlP3RoaXMudmVyaWZ5T3RwRm9ybS5nZXQoJ290cCcpLnZhbHVlOicnO1xuICAgIHRoaXMubG9naW5TZXJ2aWNlLmdldE1vYmlsZVRva2VuKG90cCwgdGhpcy5udW1iZXIpLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xuICAgICAgdGhpcy5vblNpZ25JblJlc3BvbnNlLmVtaXQoeyBjb2RlOiBTdGF0dXNDb2RlLlN1Y2Nlc3MsIGRhdGEgfSk7XG4gICAgfSwgKGVycikgPT4ge1xuICAgICAgdGhpcy5vblNpZ25JblJlc3BvbnNlLmVtaXQoeyBjb2RlOiBTdGF0dXNDb2RlLkZhaWx1cmUsIGRhdGE6IGVyciB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uT3RwQ2hhbmdlKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gNikge1xuICAgICAgdGhpcy52ZXJpZnlPdHBGb3JtLmdldCgnb3RwJykuc2V0VmFsdWUodmFsdWUpXG4gICAgfWVsc2V7XG4gICAgICB0aGlzLnZlcmlmeU90cEZvcm0uZ2V0KCdvdHAnKS5zZXRWYWx1ZSgnJylcbiAgICB9XG4gICAgdGhpcy52ZXJpZnlPdHBGb3JtLmdldCgnb3RwJykudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSgpO1xuXG4gIH1cbn1cbiJdfQ==