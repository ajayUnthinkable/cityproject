import { GoogleLoginConfig } from './models/chalo-google-login.config';
import { HttpClient, HttpParams } from '@angular/common/http';
import { ScriptLoadService } from './script-load.service';
import { Observable, Subject } from 'rxjs';
import { CookieService } from 'ngx-cookie-service';
import { GoogleLoginResponse } from './models';
import * as ɵngcc0 from '@angular/core';
export declare class GoogleLoginService<T> {
    private config;
    private httpHandler;
    private scriptService;
    private cookieService;
    auth2: any;
    authObservable: Observable<boolean | T>;
    userObservable: Observable<boolean | T>;
    private subject;
    loginResponsesubject: Subject<GoogleLoginResponse>;
    constructor(config: GoogleLoginConfig, httpHandler: HttpClient, scriptService: ScriptLoadService, cookieService: CookieService);
    getGoogleLogin(): Observable<boolean | T>;
    getUserDetails(): Observable<Object>;
    getToken(): Observable<boolean | T>;
    setGoogleLoginResponse(googleResponse: any): void;
    getGoogleLoginResponse(): Observable<GoogleLoginResponse>;
    isUserAuthenticated(): boolean;
    getUserCookieValue(): string;
    sendAuthorization(token: any): Observable<Object>;
    getUserToken(userCredential: any): Observable<any>;
    getUserTokenFromRefreshToken(refreshToken: any): Observable<any>;
    private getTokenFromServer(data);
    private getEncodedData(data);
    logoutUser(): Observable<string>;
    updateUserState(): void;
    sendLogoutMessage(msg: string): void;
    getLogoutMessage(): Observable<any>;
    encryptCookie(stringToEncrypt: any): any;
    decryptString(encryptedString: any): any;
    getUserCookie(): any;
    sendOtp(number: any): Observable<Object>;
    validateUser(body: any): Observable<Object>;
    validateOtp(otp: any, number: any): Observable<Object>;
    getMobileToken(otp: any, number: any): Observable<boolean | T>;
    getURLSearchParams(): HttpParams;
    setCookieData(data: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GoogleLoginService<any>, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<GoogleLoginService<any>>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbG8tZ29vZ2xlLWh5YnJpZC1sb2dpbi5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImNoYWxvLWdvb2dsZS1oeWJyaWQtbG9naW4uc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR29vZ2xlTG9naW5Db25maWcgfSBmcm9tICcuL21vZGVscy9jaGFsby1nb29nbGUtbG9naW4uY29uZmlnJztcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBQYXJhbXMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBTY3JpcHRMb2FkU2VydmljZSB9IGZyb20gJy4vc2NyaXB0LWxvYWQuc2VydmljZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBDb29raWVTZXJ2aWNlIH0gZnJvbSAnbmd4LWNvb2tpZS1zZXJ2aWNlJztcbmltcG9ydCB7IEdvb2dsZUxvZ2luUmVzcG9uc2UgfSBmcm9tICcuL21vZGVscyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBHb29nbGVMb2dpblNlcnZpY2U8VD4ge1xuICAgIHByaXZhdGUgY29uZmlnO1xuICAgIHByaXZhdGUgaHR0cEhhbmRsZXI7XG4gICAgcHJpdmF0ZSBzY3JpcHRTZXJ2aWNlO1xuICAgIHByaXZhdGUgY29va2llU2VydmljZTtcbiAgICBhdXRoMjogYW55O1xuICAgIGF1dGhPYnNlcnZhYmxlOiBPYnNlcnZhYmxlPGJvb2xlYW4gfCBUPjtcbiAgICB1c2VyT2JzZXJ2YWJsZTogT2JzZXJ2YWJsZTxib29sZWFuIHwgVD47XG4gICAgcHJpdmF0ZSBzdWJqZWN0O1xuICAgIGxvZ2luUmVzcG9uc2VzdWJqZWN0OiBTdWJqZWN0PEdvb2dsZUxvZ2luUmVzcG9uc2U+O1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZzogR29vZ2xlTG9naW5Db25maWcsIGh0dHBIYW5kbGVyOiBIdHRwQ2xpZW50LCBzY3JpcHRTZXJ2aWNlOiBTY3JpcHRMb2FkU2VydmljZSwgY29va2llU2VydmljZTogQ29va2llU2VydmljZSk7XG4gICAgZ2V0R29vZ2xlTG9naW4oKTogT2JzZXJ2YWJsZTxib29sZWFuIHwgVD47XG4gICAgZ2V0VXNlckRldGFpbHMoKTogT2JzZXJ2YWJsZTxPYmplY3Q+O1xuICAgIGdldFRva2VuKCk6IE9ic2VydmFibGU8Ym9vbGVhbiB8IFQ+O1xuICAgIHNldEdvb2dsZUxvZ2luUmVzcG9uc2UoZ29vZ2xlUmVzcG9uc2U6IGFueSk6IHZvaWQ7XG4gICAgZ2V0R29vZ2xlTG9naW5SZXNwb25zZSgpOiBPYnNlcnZhYmxlPEdvb2dsZUxvZ2luUmVzcG9uc2U+O1xuICAgIGlzVXNlckF1dGhlbnRpY2F0ZWQoKTogYm9vbGVhbjtcbiAgICBnZXRVc2VyQ29va2llVmFsdWUoKTogc3RyaW5nO1xuICAgIHNlbmRBdXRob3JpemF0aW9uKHRva2VuOiBhbnkpOiBPYnNlcnZhYmxlPE9iamVjdD47XG4gICAgZ2V0VXNlclRva2VuKHVzZXJDcmVkZW50aWFsOiBhbnkpOiBPYnNlcnZhYmxlPGFueT47XG4gICAgZ2V0VXNlclRva2VuRnJvbVJlZnJlc2hUb2tlbihyZWZyZXNoVG9rZW46IGFueSk6IE9ic2VydmFibGU8YW55PjtcbiAgICBwcml2YXRlIGdldFRva2VuRnJvbVNlcnZlcihkYXRhKTtcbiAgICBwcml2YXRlIGdldEVuY29kZWREYXRhKGRhdGEpO1xuICAgIGxvZ291dFVzZXIoKTogT2JzZXJ2YWJsZTxzdHJpbmc+O1xuICAgIHVwZGF0ZVVzZXJTdGF0ZSgpOiB2b2lkO1xuICAgIHNlbmRMb2dvdXRNZXNzYWdlKG1zZzogc3RyaW5nKTogdm9pZDtcbiAgICBnZXRMb2dvdXRNZXNzYWdlKCk6IE9ic2VydmFibGU8YW55PjtcbiAgICBlbmNyeXB0Q29va2llKHN0cmluZ1RvRW5jcnlwdDogYW55KTogYW55O1xuICAgIGRlY3J5cHRTdHJpbmcoZW5jcnlwdGVkU3RyaW5nOiBhbnkpOiBhbnk7XG4gICAgZ2V0VXNlckNvb2tpZSgpOiBhbnk7XG4gICAgc2VuZE90cChudW1iZXI6IGFueSk6IE9ic2VydmFibGU8T2JqZWN0PjtcbiAgICB2YWxpZGF0ZVVzZXIoYm9keTogYW55KTogT2JzZXJ2YWJsZTxPYmplY3Q+O1xuICAgIHZhbGlkYXRlT3RwKG90cDogYW55LCBudW1iZXI6IGFueSk6IE9ic2VydmFibGU8T2JqZWN0PjtcbiAgICBnZXRNb2JpbGVUb2tlbihvdHA6IGFueSwgbnVtYmVyOiBhbnkpOiBPYnNlcnZhYmxlPGJvb2xlYW4gfCBUPjtcbiAgICBnZXRVUkxTZWFyY2hQYXJhbXMoKTogSHR0cFBhcmFtcztcbiAgICBzZXRDb29raWVEYXRhKGRhdGE6IGFueSk6IHZvaWQ7XG59XG4iXX0=