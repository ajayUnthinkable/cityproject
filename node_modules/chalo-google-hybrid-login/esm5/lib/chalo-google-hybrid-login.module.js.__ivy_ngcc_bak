/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { ChaloGoogleHybridLoginComponent } from './chalo-google-hybrid-login.component';
import { HttpClientModule } from "@angular/common/http";
import { GoogleLoginService } from "./chalo-google-hybrid-login.service";
import { HTTP_INTERCEPTORS } from "@angular/common/http";
import { GoogleAuthHttpInterceptor } from "./models/chalo-google-login-service.interceptor";
import { ScriptLoadService } from './script-load.service';
import { CommonModule } from '@angular/common';
import { CookieService } from 'ngx-cookie-service';
import { MobieLoginComponent } from './mobie-login/mobie-login.component';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatInputModule } from '@angular/material/input';
import { MatFormFieldModule } from '@angular/material/form-field';
import { NumberDirective } from './directives/number.directive';
import { NgOtpInputModule } from 'ng-otp-input';
import { UserLoginComponent } from './user-login/user-login.component';
var ChaloGoogleHybridLoginModule = /** @class */ (function () {
    function ChaloGoogleHybridLoginModule() {
    }
    ChaloGoogleHybridLoginModule.decorators = [
        { type: NgModule, args: [{
                    imports: [HttpClientModule, CommonModule, FormsModule, ReactiveFormsModule,
                        MatFormFieldModule, MatInputModule, NgOtpInputModule
                    ],
                    declarations: [ChaloGoogleHybridLoginComponent, MobieLoginComponent, NumberDirective, UserLoginComponent],
                    exports: [ChaloGoogleHybridLoginComponent],
                    providers: [GoogleLoginService, ScriptLoadService, CookieService,
                        { provide: HTTP_INTERCEPTORS, useClass: GoogleAuthHttpInterceptor, multi: true }],
                },] }
    ];
    return ChaloGoogleHybridLoginModule;
}());
export { ChaloGoogleHybridLoginModule };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbG8tZ29vZ2xlLWh5YnJpZC1sb2dpbi5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jaGFsby1nb29nbGUtaHlicmlkLWxvZ2luLyIsInNvdXJjZXMiOlsibGliL2NoYWxvLWdvb2dsZS1oeWJyaWQtbG9naW4ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3RELE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHFDQUFxQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3ZELE9BQU8sRUFBQyx5QkFBeUIsRUFBQyxNQUFNLGlEQUFpRCxDQUFDO0FBQzFGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDMUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQTtBQUN0RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU8sY0FBYyxDQUFDO0FBQ2pELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDOzs7OztnQkFFdEUsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixFQUFDLFlBQVksRUFBQyxXQUFXLEVBQUMsbUJBQW1CO3dCQUNyRSxrQkFBa0IsRUFBQyxjQUFjLEVBQUUsZ0JBQWdCO3FCQUNwRDtvQkFDRCxZQUFZLEVBQUUsQ0FBQywrQkFBK0IsRUFBRSxtQkFBbUIsRUFBQyxlQUFlLEVBQUUsa0JBQWtCLENBQUM7b0JBQ3hHLE9BQU8sRUFBRSxDQUFDLCtCQUErQixDQUFDO29CQUMxQyxTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxpQkFBaUIsRUFBQyxhQUFhO3dCQUM3RCxFQUFDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUseUJBQXlCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFDO2lCQUVsRjs7dUNBMUJEOztTQTJCYSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2hhbG9Hb29nbGVIeWJyaWRMb2dpbkNvbXBvbmVudCB9IGZyb20gJy4vY2hhbG8tZ29vZ2xlLWh5YnJpZC1sb2dpbi5jb21wb25lbnQnO1xuaW1wb3J0IHtIdHRwQ2xpZW50TW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uL2h0dHBcIjtcbmltcG9ydCB7R29vZ2xlTG9naW5TZXJ2aWNlfSBmcm9tIFwiLi9jaGFsby1nb29nbGUtaHlicmlkLWxvZ2luLnNlcnZpY2VcIjtcbmltcG9ydCB7SFRUUF9JTlRFUkNFUFRPUlN9IGZyb20gXCJAYW5ndWxhci9jb21tb24vaHR0cFwiO1xuaW1wb3J0IHtHb29nbGVBdXRoSHR0cEludGVyY2VwdG9yfSBmcm9tIFwiLi9tb2RlbHMvY2hhbG8tZ29vZ2xlLWxvZ2luLXNlcnZpY2UuaW50ZXJjZXB0b3JcIjtcbmltcG9ydCB7IFNjcmlwdExvYWRTZXJ2aWNlIH0gZnJvbSAnLi9zY3JpcHQtbG9hZC5zZXJ2aWNlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb29raWVTZXJ2aWNlIH0gZnJvbSAnbmd4LWNvb2tpZS1zZXJ2aWNlJztcbmltcG9ydCB7IE1vYmllTG9naW5Db21wb25lbnQgfSBmcm9tICcuL21vYmllLWxvZ2luL21vYmllLWxvZ2luLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7TWF0SW5wdXRNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2lucHV0J1xuaW1wb3J0IHsgTWF0Rm9ybUZpZWxkTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZm9ybS1maWVsZCc7XG5pbXBvcnQgeyBOdW1iZXJEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvbnVtYmVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOZ090cElucHV0TW9kdWxlIH0gZnJvbSAgJ25nLW90cC1pbnB1dCc7XG5pbXBvcnQgeyBVc2VyTG9naW5Db21wb25lbnQgfSBmcm9tICcuL3VzZXItbG9naW4vdXNlci1sb2dpbi5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbSHR0cENsaWVudE1vZHVsZSxDb21tb25Nb2R1bGUsRm9ybXNNb2R1bGUsUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBNYXRGb3JtRmllbGRNb2R1bGUsTWF0SW5wdXRNb2R1bGUsIE5nT3RwSW5wdXRNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbQ2hhbG9Hb29nbGVIeWJyaWRMb2dpbkNvbXBvbmVudCwgTW9iaWVMb2dpbkNvbXBvbmVudCxOdW1iZXJEaXJlY3RpdmUsIFVzZXJMb2dpbkNvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtDaGFsb0dvb2dsZUh5YnJpZExvZ2luQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbR29vZ2xlTG9naW5TZXJ2aWNlLCBTY3JpcHRMb2FkU2VydmljZSxDb29raWVTZXJ2aWNlLFxuICAgIHtwcm92aWRlOiBIVFRQX0lOVEVSQ0VQVE9SUywgdXNlQ2xhc3M6IEdvb2dsZUF1dGhIdHRwSW50ZXJjZXB0b3IsIG11bHRpOiB0cnVlfV0sXG5cbn0pXG5leHBvcnQgY2xhc3MgQ2hhbG9Hb29nbGVIeWJyaWRMb2dpbk1vZHVsZSB7IH1cbiJdfQ==