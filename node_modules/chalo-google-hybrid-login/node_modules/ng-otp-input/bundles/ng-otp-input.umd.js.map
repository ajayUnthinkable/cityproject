{"version":3,"file":"ng-otp-input.umd.js","sources":["../../../projects/ng-otp-input/src/lib/pipes/keys.pipe.ts","../../../projects/ng-otp-input/src/lib/components/ng-otp-input/ng-otp-input.component.ts","../../../projects/ng-otp-input/src/lib/directives/number-only.directive.ts","../../../projects/ng-otp-input/src/lib/ng-otp-input.module.ts","../../../projects/ng-otp-input/src/public_api.ts","../../../projects/ng-otp-input/src/ng-otp-input.ts"],"names":["Pipe","EventEmitter","FormGroup","FormControl","Component","Input","Output","Directive","ElementRef","Renderer2","NgModule","CommonModule","FormsModule","ReactiveFormsModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAKA;AAAsB;AAAU,QAC9B,4BAAS,GAAT,UAAU,KAAU;AAAI,YACtB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AAC7B,SAAG;;;;;;;;gDACH;AAAC;AACuB,SALf;AAAC;AAAC;AACU,QCsBnB,6BAAoB,QAAkB;SD1BvCA,SAAI,SAAC,3BC0BsC,YAAtB,aAAQ,GAAR,QAAQ,CAAU;WDzBtC,IAAI,EAAE,MAAM,vBCyB2B,YAV9B,WAAM,GAAW,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;ADdzC,ACeD;AACU,YAAE,kBAAa,GAAG,IAAIC,iBAAY,EAAU,CAAC;AACvD,YACE,kBAAa,GAAkB,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC/D,YAAE,iBAAY,GACV,IAAI,CAAC,MAAM,EAAE;AACjB,iBAAO,QAAQ,CAAC,EAAE,CAAC;AACnB,iBAAO,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxD,SAC4C;AAC5C,QACE,sCAAQ,GAAR;AACD,YADC,iBAkBC;AACH,YAlBI,IAAI,CAAC,OAAO,GAAG,IAAIC,eAAS,CAAC,EAAE,CAAC,CAAC;AACrC,YAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AAC7D,gBAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,IAAIC,iBAAW,EAAE,CAAC,CAAC;AAC7E,aAAK;AACL,YAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAQ;AAAI,gBAC/C,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,CAAC;AAAI,oBAC3D,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACjD,oBAAQ,IAAG,GAAG,IAAI,GAAG,CAAC,MAAM,GAAC,CAAC,EAAC;AAC/B,wBAAU,IAAI,GAAG,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AAChD,4BAAY,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC/B,yBAAW;AAAC,6BAAG;AACf,4BAAY,KAAI,CAAC,YAAY,EAAE,CAAC;AAChC,yBAAW;AACX,qBAAS;AACT,iBAAO,CAAC,CAAC;AACT,aAAK,CAAC,CAAC;AACP,YAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;AACzC,SAAG;AAEH,QAAE,6CAAe,GAAf;AAAc,YAAd,iBAWC;AACH,YAXI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AACvC,gBAAM,IAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAK,IAAI,CAAC,YAAc,CAAC,CAAC;AAC9E,gBAAM,IAAI,aAAa,EAAE;AACzB,oBAAQ,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;AAChF,oBAAQ,IAAM,GAAG,GAAQ,aAAa,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9E,oBAAQ,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE;AAC9B,wBAAU,GAAG,CAAC,KAAK,EAAE,CAAC;AACtB,qBAAS;AACT,iBAAO;AACP,aAAK;AACL,SAAG;AACF,QAAS,4CAAc,GAAd,UAAe,GAAG;AAC5B,YAAI,OAAO,UAAQ,GAAK,CAAC;AACzB,SAAG;AAEH,QAAE,yCAAW,GAAX,UAAY,KAAK;AACnB,YAAI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACrC,SAAG;AAEH,QAAE,0CAAY,GAAZ,UAAa,KAAK;AACpB,YAAI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACrC,SAAG;AAEH,QAAE,iDAAmB,GAAnB,UAAoB,KAAK;AAC3B,YAAI,QACE,KAAK,CAAC,GAAG,KAAK,WAAW;AAC/B,gBAAM,KAAK,CAAC,GAAG,KAAK,QAAQ;AAC5B,gBAAM,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;AAC9B,gBAAM,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,EACzB;AACN,SAAG;AAEH,QAAE,uCAAS,GAAT,UAAU,KAAK,EAAE,UAAU;AAC7B,YAAI,IAAM,GAAG,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC;AAChD;AACQ,YAAJ,OAAO,GAAG,IAAI,UAAU,GAAG,IAAI,GAAG,KAAK,CAAC;AAC5C,SAAG;AACF,QAAC,uCAAS,GAAT,UAAU,MAAM;AAClB,YAAI,IAAI,OAAO,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAC,EAAE,CAAC,CAAA;AACzC,YAAI,IAAI,OAAO,EAAE;AAChB,gBAAG,OAAO,KAAK,CAAC;AACjB,aAAK;AACL,SAAG;AAEH,QAAE,qCAAO,GAAP,UAAQ,MAAM,EAAE,QAAQ;AAC1B,YAAI,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,UAAO,QAAQ,GAAG,CAAC,CAAE,CAAC,CAAC;AAC9D,YAAI,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,UAAO,QAAQ,GAAG,CAAC,CAAE,CAAC,CAAC;AAC9D,YAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AACnC,gBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACpC,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;AAClC,gBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACpC,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;AACzD,YAAI,IAAI,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;AAC7C,gBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACpC,gBAAM,IAAI,CAAC,YAAY,EAAE,CAAC;AAC1B,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;AAC9B,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AACnC,gBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACpC,aAAK;AACL,YAAI,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,SAAG;AAEH,QAAE,uCAAS,GAAT,UAAU,EAAE;AACd,YAAI,OAAU,EAAE,SAAI,IAAI,CAAC,YAAc,CAAC;AACxC,SAAG;AAEH,QAAE,yCAAW,GAAX,UAAY,KAAK;AACnB,YAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACxB,YAAI,IAAM,GAAG,GAAQ,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACpD,YAAI,IAAI,GAAG,IAAI,GAAG,CAAC,iBAAiB,EAAE;AACtC,gBAAM,UAAU,CAAC;AACX,oBAAE,GAAG,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpC,iBAAO,EAAE,CAAC,CAAC,CAAC;AACZ,aAAK;AACL,SAAG;AAEH,QAAE,0CAAY,GAAZ,UAAa,KAAK;AACpB,YAAI,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACnD,YAAI,IAAM,QAAQ,GAAG,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AAC3E,YAAI,QACE,QAAQ;AACd,gBAAM,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;AAC/B,iBAAO,IAAI,CAAC,MAAM,CAAC,aAAa;AAChC,oBAAQ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC1D,iBAAO,KAAK,CAAC,OAAO,IAAI,EAAE,IAAI,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,EAC7C;AACN,SAAG;AAEH,QAAE,qCAAO,GAAP,UAAQ,KAAK;AACf,YAAI,IAAM,GAAG,GAAQ,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACpD,YAAI,IAAI,GAAG,EAAE;AACb,gBAAM,GAAG,CAAC,KAAK,EAAE,CAAC;AAClB,aAAK;AACL,SAAG;AAEH;AACM,QAAJ,sCAAQ,GAAR,UAAS,KAAU;AACrB,YADE,iBAwBC;AACH,YAxBI,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;AACtD,gBAAQ,OAAO;AACf,aAAK;AACL,YAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACzB,YAAK,IAAI,CAAC,KAAK,EAAE;AACjB,gBAAO,IAAI,CAAC,YAAY,EAAE,CAAC;AAC3B,gBAAO,OAAO;AACd,aAAM;AACN,YAAK,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACjD,YAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,GAAG;AAAI,gBAChC,IAAI,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE;AAC1D,oBAAY,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACnE,iBAAW;AACX,aAAM,CAAC,CAAC;AACR,YAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AACxC,gBAAM,IAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAK,IAAI,CAAC,YAAc,CAAC,CAAC;AAC9E,gBAAM,IAAI,qBAAqB,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC9G,gBAAM,IAAI,GAAG,GAAS,aAAa,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,qBAAqB,CAAC,CAAC;AAC/F,gBAAM,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE;AAC5B,oBAAQ,GAAG,CAAC,KAAK,EAAE,CAAC;AACpB,iBAAO;AACP,aAAM;AACN,YAAK,IAAI,CAAC,YAAY,EAAE,CAAC;AACzB,SAAG;AAEH,QAAE,0CAAY,GAAZ;AAAc,YAAd,iBAsBC;AACH,YAtBI,IAAI,GAAG,GAAG,EAAE,CAAC;AACjB,YAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;AAAI,gBAC1D,IAAI,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;AAC1C,oBAAQ,IAAI,OAAO,GAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACnD,oBAAQ,IAAI,cAAc,GAAC,OAAO,CAAC,MAAM,GAAC,CAAC,CAAC;AAC5C,oBAAQ,IAAI,sBAAsB,GAAE,CAAC,KAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,KAAI,CAAC,MAAM,CAAC,UAAU,KAAK,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,EAAE,IAAI,OAAO,IAAI,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,EAAE,IAAG,OAAO,CAAC,CAAC;AAC/M,oBAAQ,OAAO,GAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3B,oBAAQ,IAAI,cAAc,GAAC,sBAAsB,GAAG,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,EAAE,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,EAAE,GAAG,OAAO,CAAC,WAAW,EAAE,GAAI,OAAO,CAAC;AACrK,oBAAQ,IAAG,sBAAsB,IAAI,cAAc,IAAI,OAAO,EAAC;AAC/D,wBAAU,sBAAsB,GAAC,KAAK,CAAC;AACvC,qBAAS;AAAC,yBAAG;AACb,wBAAU,OAAO,GAAC,cAAc,CAAC;AACjC,qBAAS;AACT,oBAAQ,GAAG,IAAI,OAAO,CAAC;AACvB,oBAAQ,IAAG,cAAc,IAAI,sBAAsB,EAC3C;AACR,wBAAS,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACpD,qBAAS;AACT,iBAAO;AACP,aAAK,CAAC,CAAC;AACP,YAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjC,SAAG;AACF,QACC,0CAAY,GAAZ;AAAc,YACZ,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe;AAAC,kBAC/B,UAAU;AAAC,kBACX,IAAI,CAAC,MAAM,CAAC,gBAAgB;AAAC,sBAC3B,KAAK;AACf,sBAAU,MAAM,CAAC;AACjB,SAAG;AAEH,QAAE,yCAAW,GAAX,UAAY,CAAC;AACf;AACQ,YAAJ,IAAI,aAAa,GAAG,CAAC,CAAC,aAAa,IAAI,MAAM,CAAC,eAAe,CAAC,CAAC;AACnE,YAAI,IAAG,aAAa,EAAC;AACrB,gBAAK,IAAI,UAAU,GAAE,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,aAAK;AACL;AACQ,YAAJ,CAAC,CAAC,eAAe,EAAE,CAAC;AACxB,YAAI,CAAC,CAAC,cAAc,EAAE,CAAC;AACvB,YAAI,IAAI,CAAC,UAAU,EAAE;AACrB,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC9B,SAAG;;;;;;;;;;;;;;;;;;;oBACH;AAAC;AACkC,SAnN1B;AAAC;AAAQ;AAAyC;8DAN1DC,cAAS,SAAC,rFAOF;AAEL;AAAY;AAAmB;+CAPjC,QAAQ,EAAE,zDAO+B;OAPjB,PASG,gBAbpB,QAAQ;EAKf,FALkB;AAAU;AAGlB;AACP,yBAKFC,UAAK;AAAK,gCAEVC,WAAM;AAAI;AAAO;AAAC;AAEnB,QCfA,6BAAqB,MAAkB,EAAU,SAAoB;AAAI,YAApD,WAAM,GAAN,MAAM,CAAY;AAAC,YAAS,cAAS,GAAT,SAAS,CAAW;AAAC,SAAI;AAC5E,QACE,sCAAQ,GAAR;AACD,YAAG,IAAG,CAAC,IAAI,CAAC,kBAAkB,EAAC;mJDIc,nJCH9C,gBAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,YAAY,EAAE,8EAA8E,CAAC,CAAC;AAC3J,aAAK;AACL,SAAG;;oJDGF;;;;;;;;oBCFD;AACA;AAAoC,SAV3B;AAAC;AAAQ;AACM;8DAJvBC,cAAS,SAAC,rFAKR;AAEW;MANZ,QAAQ,EAAE,hBAOD;AAAmB;GAPJ,kBACzB,rBAOG;AAAgE,gBAXhDC,eAAU;AAAI,gBAAFC,cAAS;AAAG;AAAU;AAK1B;AACQ,qCAAjCJ,UAAK;AAAI;AAAO;AAAC;AACiB,QCUrC;AAA8B;;;;;;;;;;;;;;;;;;;;;;gDACzB;AAAC;AAAiC,SAD9B;AAAC;AAAC,ICjBX;AACA;AAEA;AACO;AAAC,ICJR;AACA;AAEA;AACO;MFGNK,aAAQ,SAAC,sBACR,lDEJM;EFIC,EAAE,0BACPC,9BEH4B;AFGhB,0BACZC,1BEJ6E;gBFIlE,hBEHW;AAAsC;GFI5DC,yBAAmB,sBACpB,lDEL8D;AAAmE;IFMlI,JENmI;UFMvH,EAAE,CAAC,mBAAmB,EAAE,QAAQ,EAAE,mBAAmB,CAAC,sBAClE,OAAO,EAAE,CAAC,mBAAmB,CAAC,sBAC9B,SAAS,EAAE,CAAC,QAAQ,CAAC,kBACtB,jLET0I","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keys'\r\n})\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value: any): string[] {\r\n    return Object.keys(value)\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { KeysPipe } from '../../pipes/keys.pipe';\r\nimport { Config } from '../../models/config';\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'ng-otp-input',\r\n  templateUrl: './ng-otp-input.component.html',\r\n  styleUrls: ['./ng-otp-input.component.scss']\r\n})\r\nexport class NgOtpInputComponent implements OnInit, AfterViewInit {\r\n  @Input() config: Config = { length: 4 };\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onInputChange = new EventEmitter<string>();\r\n  otpForm: FormGroup;\r\n  inputControls: FormControl[] = new Array(this.config.length);\r\n  componentKey =\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2) + new Date().getTime().toString(36);\r\n  inputType: string;\r\n  constructor(private keysPipe: KeysPipe) {}\r\n\r\n  ngOnInit() {\r\n    this.otpForm = new FormGroup({});\r\n    for (let index = 0; index < this.config.length; index++) {\r\n      this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n    }\r\n    this.otpForm.valueChanges.subscribe((v:object)=>{\r\n      this.keysPipe.transform(this.otpForm.controls).forEach((k) => {\r\n        var val = this.otpForm.controls[k].value;\r\n        if(val && val.length>1){\r\n          if (val.length >= this.config.length) {\r\n            this.setValue(val);\r\n          }else{\r\n            this.rebuildValue();\r\n          }\r\n        }\r\n      });\r\n    });\r\n    this.inputType = this.getInputType();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.config.disableAutoFocus) {\r\n      const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n      if (containerItem) {\r\n        containerItem.addEventListener('paste', (evt) => this.handlePaste(evt));\r\n        const ele: any = containerItem.getElementsByClassName('otp-input')[0];\r\n        if (ele && ele.focus) {\r\n          ele.focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private getControlName(idx) {\r\n    return `ctrl_${idx}`;\r\n  }\r\n\r\n  ifLeftArrow(event) {\r\n    return this.ifKeyCode(event, 37);\r\n  }\r\n\r\n  ifRightArrow(event) {\r\n    return this.ifKeyCode(event, 39);\r\n  }\r\n\r\n  ifBackspaceOrDelete(event) {\r\n    return (\r\n      event.key === 'Backspace' ||\r\n      event.key === 'Delete' ||\r\n      this.ifKeyCode(event, 8) ||\r\n      this.ifKeyCode(event, 46)\r\n    );\r\n  }\r\n\r\n  ifKeyCode(event, targetCode) {\r\n    const key = event.keyCode || event.charCode;\r\n    // tslint:disable-next-line: triple-equals\r\n    return key == targetCode ? true : false;\r\n  }\r\n  onKeyDown($event) {\r\n    var isSpace=this.ifKeyCode($event,32)\r\n    if (isSpace) {// prevent space\r\n    return false;\r\n    }\r\n  }\r\n\r\n  onKeyUp($event, inputIdx) {\r\n    const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n    const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n    if (this.ifRightArrow($event)) {\r\n      this.setSelected(nextInputId);\r\n      return;\r\n    }\r\n    if (this.ifLeftArrow($event)) {\r\n      this.setSelected(prevInputId);\r\n      return;\r\n    }\r\n    const isBackspace = this.ifBackspaceOrDelete($event);\r\n    if (isBackspace && !$event.target.value) {\r\n      this.setSelected(prevInputId);\r\n      this.rebuildValue();\r\n      return;\r\n    }\r\n    if (!$event.target.value) {\r\n      return;\r\n    }\r\n    if (this.ifValidEntry($event)) {\r\n      this.setSelected(nextInputId);\r\n    }\r\n    this.rebuildValue();\r\n  }\r\n\r\n  appendKey(id) {\r\n    return `${id}_${this.componentKey}`;\r\n  }\r\n\r\n  setSelected(eleId) {\r\n    this.focusTo(eleId);\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele && ele.setSelectionRange) {\r\n      setTimeout(() => {\r\n        ele.setSelectionRange(0, 1);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ifValidEntry(event) {\r\n    const inp = String.fromCharCode(event.keyCode);\r\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n    return (\r\n      isMobile ||\r\n      /[a-zA-Z0-9-_]/.test(inp) ||\r\n      (this.config.allowKeyCodes &&\r\n        this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n      (event.keyCode >= 96 && event.keyCode <= 105)\r\n    );\r\n  }\r\n\r\n  focusTo(eleId) {\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele) {\r\n      ele.focus();\r\n    }\r\n  }\r\n\r\n  // method to set component value\r\n  setValue(value: any) {\r\n    if (this.config.allowNumbersOnly && isNaN(value)) {\r\n        return;\r\n    }\r\n    this.otpForm.reset();\r\n     if (!value) {\r\n       this.rebuildValue();\r\n       return;\r\n     }\r\n     value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n     Array.from(value).forEach((c, idx) => {\r\n          if (this.otpForm.get(this.getControlName(idx))) {\r\n            this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n          }\r\n     });\r\n     if (!this.config.disableAutoFocus) {\r\n      const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n      var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n      let ele : any = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n      if (ele && ele.focus) {\r\n        ele.focus();\r\n      }\r\n     }\r\n     this.rebuildValue();\r\n  }\r\n\r\n  rebuildValue() {\r\n    let val = '';\r\n    this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n      if (this.otpForm.controls[k].value) {\r\n        let ctrlVal=this.otpForm.controls[k].value;\r\n        let isLengthExceed=ctrlVal.length>1;\r\n        let isCaseTransformEnabled= !this.config.allowNumbersOnly && this.config.letterCase && (this.config.letterCase.toLocaleLowerCase() == 'upper' || this.config.letterCase.toLocaleLowerCase()== 'lower');\r\n        ctrlVal=ctrlVal[0];\r\n        let transformedVal=isCaseTransformEnabled ? this.config.letterCase.toLocaleLowerCase() == 'upper' ? ctrlVal.toUpperCase() : ctrlVal.toLowerCase()  : ctrlVal;\r\n        if(isCaseTransformEnabled && transformedVal == ctrlVal){\r\n          isCaseTransformEnabled=false;\r\n        }else{\r\n          ctrlVal=transformedVal;\r\n        }\r\n        val += ctrlVal;\r\n        if(isLengthExceed || isCaseTransformEnabled) \r\n        {\r\n         this.otpForm.controls[k].setValue(ctrlVal);\r\n        }\r\n      }\r\n    });\r\n    this.onInputChange.emit(val);\r\n  }\r\n  \r\n  getInputType():string{\r\n    return this.config.isPasswordInput \r\n      ? 'password' \r\n      : this.config.allowNumbersOnly \r\n        ? 'tel'\r\n        : 'text';\r\n  }\r\n\r\n  handlePaste(e) {\r\n    // Get pasted data via clipboard API\r\n    let clipboardData = e.clipboardData || window['clipboardData'];\r\n    if(clipboardData){\r\n     var pastedData =clipboardData.getData('Text');\r\n    }\r\n    // Stop data actually being pasted into div\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (!pastedData) {\r\n      return;\r\n    }\r\n    this.setValue(pastedData);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[numberOnly]'\r\n})\r\nexport class NumberOnlyDirective {\r\n  @Input() disabledNumberOnly:boolean;\r\n  constructor (private _elRef: ElementRef, private _renderer: Renderer2) { }\r\n\r\n  ngOnInit() {\r\n    if(!this.disabledNumberOnly){\r\n      this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n    }\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { NgOtpInputComponent } from './components/ng-otp-input/ng-otp-input.component';\r\nimport { KeysPipe } from './pipes/keys.pipe';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NumberOnlyDirective } from './directives/number-only.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\r\n  exports: [NgOtpInputComponent],\r\n  providers: [KeysPipe]\r\n})\r\nexport class NgOtpInputModule { }\r\n","/*\r\n * Public API Surface of ng-otp-input\r\n */\r\n\r\nexport * from './lib/ng-otp-input.module';\r\nexport * from './lib/components/ng-otp-input/ng-otp-input.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NumberOnlyDirective as ɵb} from './lib/directives/number-only.directive';\nexport {KeysPipe as ɵa} from './lib/pipes/keys.pipe';"]}