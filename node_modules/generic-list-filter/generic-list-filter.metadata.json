{"__symbolic":"module","version":4,"metadata":{"GenericListFilterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"app-filter","template":"<div class=\"dispatch-filters display-flex\">\n    <div class=\"display-flex\">\n      <div *ngIf=\"filterKeys?.length\"\n        [ngClass]=\"(filterKeys.length>2)?'filter-list-container-2 flex-wrap':'filter-list-container-2'\">\n        <ng-container *ngIf=\"isCountClicked\">\n          <div class=\"filter-list\" *ngFor=\"let item of filterKeys;let i = index\">\n            <span class=\"filter-list-data\"> {{item | titlecase}} : {{allAppliedFilters[item]}} </span>\n            <span (click)=\"onRemoveFilter(item)\" class=\"cancle-icon\">\n              x\n            </span>\n          </div>\n        </ng-container>\n  \n  \n        <div class=\"filter-list\" *ngIf=\"!isCountClicked\">\n          <span  class=\"filter-list-data\"> {{filterKeys[0] | titlecase}} : {{allAppliedFilters[filterKeys[0]]}} </span>\n          <span (click)=\"onRemoveFilter(filterKeys[0])\" class=\"cancle-icon\">\n            x\n          </span>\n        </div>\n  \n        <div class=\"filter-list\" *ngIf=\"filterKeys?.length >= 2 && !isCountClicked\">\n          <span  class=\"filter-list-data\"> {{filterKeys[1] | titlecase}} : {{allAppliedFilters[filterKeys[1]]}} </span>\n          <span (click)=\"onRemoveFilter(filterKeys[1])\" class=\"cancle-icon\">\n            x\n          </span>\n        </div>\n  \n        <div (click)=\"openRestAppliedFilters()\" class=\"filter-list cr-ptr\"\n          *ngIf=\"filterKeys.length > 2 && !isCountClicked\">\n          +{{filterKeys.length - 2}}\n        </div>\n  \n      </div>\n      <span\n        class=\"filter-color\"\n        (click)=\"openFilterSideBar()\">\n        <i class=\"fa fa-filter fa-2x icon-margin\"></i>\n        <!-- <span *ngIf=\"totalFilterCount\">({{totalFilterCount}})</span>  -->\n      </span>\n    </div>\n  \n    <div *ngIf=\"openFilterBar\" class=\"filter-position-modal\">\n      <div class=\"modalbody ele\">\n        <div>\n          <div class=\"header-item\">\n            <div>\n              Filter\n            </div>\n            <div class=\"cr-ptr\">\n              <span (click)=\"resetAllFilters()\" class=\"reset-filter\">Reset</span>\n              <span (click)=\"onCancel()\"><img class=\"cancle-icon-1\" src=\"./../../assets/images/crossIcon.png\"></span>\n            </div>\n          </div>\n          <hr>\n  \n          <div class=\"main-body\">\n            <div class=\"side-bar-wrapper\">\n              <div class=\"filter-side-menu\">\n                <div \n                *ngFor=\"let filter of filterKeys1\"  \n                [class.selected]=\"selectedFilterTabType1 === filter || isFilterExists(filter)\"\n                (click)=\"selectedFilterTab(filter)\" class=\"side-menu-tabs\">\n                    {{filter | titlecase}}\n                </div>\n  \n                <div *ngIf=\"paramList?.fromTime && paramList?.toTime\"\n                [class.selected]=\"selectedFilterTabType1 === 'time' || timeFilter\" (click)=\"selectedFilterTab('time')\"\n                class=\"side-menu-tabs\">\n                Select Time\n               </div>\n              </div>\n            </div>\n  \n            <div class=\"vl\"></div>\n  \n            <div class=\"filter-list-wrapper\">\n              <div style=\"margin-left: 22px;\" *ngIf=\"selectedFilterTabType1 !== 'time'\">\n              <input class=\"filter-search-option\" type=\"text\" placeholder=\"Search {{selectedFilterTabType1}}\" matInput\n                [(ngModel)]=\"searchKey\" (keyup)=\"filterData(searchKey)\" />\n             </div>\n              <div  [ngClass]=\"(list[selectedFilterTabType1]?.length > 6) ? 'filter-data-list-scroll-2 filter-data-list' : 'filter-data-list'\">\n                <div \n                *ngFor=\"let item of list[selectedFilterTabType1]\"\n                class=\"filter-content\"\n                (click)=\"selectFilter(item,selectedFilterTabType1)\"\n                [class.selected]=\"selectedCategory.value === item\"\n                >\n                    {{item}}\n                </div>\n  \n                <div *ngIf=\"paramList.selectedTab > 0 && selectedFilterTabType1=='live status'\"\n                [ngClass]=\"(liveStatus?.length > 6) ? 'filter-data-list-scroll-2 filter-data-list' : 'filter-data-list'\">\n                <div (click)=\"selectFilter(item,'live status')\" [class.selected]=\"selectedCategory.value.value === item.value\"\n                  *ngFor=\"let item of liveStatus\" class=\"filter-content\">\n                  {{item.name}}\n                </div>\n                </div>\n  \n                <ng-container *ngIf=\"paramList?.fromTime && paramList?.toTime && selectedFilterTabType1 === 'time'\">\n                  <div *ngIf=\"selectedFilterTabType === 'time'\" class=\"filter-data-list\">\n                    <div class=\"time-input-wrapper\">\n                      <label>From Time</label>\n                      <input matInput class=\"filter-time-input\" [(ngModel)]=\"fromTime\" [ngxTimepicker]=\"picker2\"\n                        placeholder=\"From Time\" readonly>\n                      <ngx-material-timepicker (timeSet)=\"setTime('fromTime',$event)\" #picker2></ngx-material-timepicker>\n                    </div>\n    \n                    <div class=\"time-input-wrapper\">\n                      <label>To Time</label>\n                      <input style=\"margin-left: 26px;\" matInput class=\"filter-time-input\" [(ngModel)]=\"toTime\"\n                        [ngxTimepicker]=\"picker3\" placeholder=\"To Time\" readonly>\n                      <ngx-material-timepicker (timeSet)=\"setTime('toTime',$event)\" #picker3></ngx-material-timepicker>\n                    </div>\n                  </div>\n                </ng-container>\n  \n  \n              </div>\n             \n              <div class=\"apply-btn\">\n                <button (click)=\"applyFilters()\" class=\"app-btn\">\n                  <span>Apply</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","styles":[".filter-modal-position-2{position:absolute;right:630px;top:109px}.filter-modal-position{position:absolute;right:474px;top:104px}.filter-modal-position-1{position:absolute;right:729px;top:109px}.modalbody{-moz-box-shadow:0 0 16px 0 rgba(0,0,0,.75);-webkit-box-shadow:0 0 16px 0 rgba(0,0,0,.75);background-color:#fff;border-radius:4px;box-shadow:0 0 16px 0 rgba(0,0,0,.75);display:flex;flex-direction:column;font-size:15px;height:400px;overflow:auto;position:fixed;width:400px;z-index:4}.ele{-webkit-animation:fadeIn .3s;-webkit-animation-fill-mode:forwards;animation:fadeIn .3s;animation-fill-mode:forwards;visibility:hidden}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1;visibility:visible}}@keyframes fadeIn{0%{opacity:0}to{opacity:1;visibility:visible}}.cancle-icon-1:hover{background-color:#f1f1f1;border-radius:50%;box-shadow:0 0 0 6px #f1f1f1}.header-item{display:flex;font-size:medium;justify-content:space-between;padding:10px 20px 0}.vl{border-left:1px solid grey;height:-webkit-fill-available;left:30%;margin-left:-4px;margin-top:38px;position:absolute;top:0}hr{margin-bottom:0}.side-menu-tabs{cursor:pointer;padding:14px 14px 14px 16px;width:116px}.side-menu-tabs:hover{background-color:#f1f1f1;color:#f28100}.side-bar-wrapper{width:117px}.main-body{display:flex}.filter-list-wrapper{width:100%}.filter-data-list{padding:10px}.filter-data-list-scroll-2{max-height:275px;overflow-y:scroll;padding:10px}.filter-content{cursor:pointer;padding:10px}.filter-content:hover{width:100%}.filter-content:hover,.filter-data-list .filter-content.selected{background-color:#f1f1f1;color:#f28100}.cr-ptr{cursor:pointer}.cr-ptr,.filter-side-menu .side-menu-tabs.selected{color:#f28100}.reset-filter{color:#f28100;margin-right:10px}.reset-filter:hover{background-color:#f1f1f1;border-radius:0;box-shadow:0 0 0 6px #f1f1f1}.filter-time-input{background:transparent;border:none;border-bottom:1px solid #999;font-size:14px;height:30px!important;height:30px;margin-left:8px;outline:none;padding:13px 9px;width:150px!important}.time-input-wrapper{padding:10px 0}.icon-margin{margin-right:10px;margin-top:-1px}.apply-btn{bottom:10px;position:absolute;right:12px}.filter-search-option{border:none;border-bottom:1px solid #f28100;font-size:14px;margin-bottom:5px;margin-right:20px;outline:none;padding-bottom:5px;padding-top:8px;width:-webkit-fill-available}.filter-list{border:1px solid #f28100;border-radius:12px;color:#000;display:flex;font-size:10px;height:26px;margin:2px;padding:3px 8px}.filter-list-data{-webkit-box-orient:vertical;-webkit-line-clamp:1;display:-webkit-box;overflow:hidden;text-overflow:ellipsis;width:125px}.filter-list-container-2{color:#f28100;display:flex;margin-left:auto;margin-right:5px;margin-top:-1px}.flex-wrap{flex-wrap:wrap;justify-content:flex-end;max-width:385px}.cancle-icon{color:#f28100;cursor:pointer;font-size:14px;font-size:13px;font-weight:700;font-weight:500;padding-left:5px;position:relative;top:-1px}.cancle-icon img{width:9px}.display-flex{display:flex}.filter-icon-position{color:#f28100;padding-right:15px}.filter-icon-position i{cursor:pointer}.filter-lst-show{display:flex;margin-left:auto}.filter-modal-position-3{position:absolute;right:569px;top:109px}.filter-color{color:#f28100;cursor:pointer}.dispatch-filters{position:relative}.dispatch-filters .filter-position-modal{position:absolute;right:430px;top:24px}"]}]}],"members":{"list":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"paramList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"onFilterChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"openFilterSideBar":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}],"onRemoveFilter":[{"__symbolic":"method"}],"applyFilters":[{"__symbolic":"method"}],"setTime":[{"__symbolic":"method"}],"filterChange":[{"__symbolic":"method"}],"openRestAppliedFilters":[{"__symbolic":"method"}],"selectedFilterTab":[{"__symbolic":"method"}],"isFilterExists":[{"__symbolic":"method"}],"selectFilter":[{"__symbolic":"method"}],"resetAllFilters":[{"__symbolic":"method"}],"filterData":[{"__symbolic":"method"}]}},"GenericListFilterModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":9,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"GenericListFilterComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":12,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":13,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":14,"character":4},{"__symbolic":"reference","module":"ngx-material-timepicker","name":"NgxMaterialTimepickerModule","line":15,"character":4}],"exports":[{"__symbolic":"reference","name":"GenericListFilterComponent"}]}]}],"members":{}}},"origins":{"GenericListFilterComponent":"./lib/generic-list-filter.component","GenericListFilterModule":"./lib/generic-list-filter.module"},"importAs":"generic-list-filter"}