!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("moment"),require("lodash"),require("@angular/common"),require("@angular/forms"),require("ngx-material-timepicker")):"function"==typeof define&&define.amd?define("generic-list-filter",["exports","@angular/core","moment","lodash","@angular/common","@angular/forms","ngx-material-timepicker"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["generic-list-filter"]={},e.ng.core,e.moment,e._,e.ng.common,e.ng.forms,e.ngxMaterialTimepicker)}(this,(function(e,t,i,l,s,r,n){"use strict";function o(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(i){if("default"!==i){var l=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(t,i,l.get?l:{enumerable:!0,get:function(){return e[i]}})}})),t.default=e,Object.freeze(t)}var a=o(i);
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */Object.create;function p(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var l,s,r=i.call(e),n=[];try{for(;(void 0===t||t-- >0)&&!(l=r.next()).done;)n.push(l.value)}catch(e){s={error:e}}finally{try{l&&!l.done&&(i=r.return)&&i.call(r)}finally{if(s)throw s.error}}return n}Object.create;var c=function(){function e(){this.onFilterChange=new t.EventEmitter,this.selectedValues=[],this.selectedCategory={type:"",value:""},this.isFiltersApplied=!1,this.openFilterBar=!1,this.timeFilter=!1,this.searchKey="",this.isCountClicked=!1,this.isData=!1,this.isStatus=!1}return e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(){var e=this;setTimeout((function(){e.filterKeys1=Object.keys(e.list),e.selectedFilterTabType1=e.filterKeys1[0],e.fromTime=e.paramList.fromTime,e.toTime=e.paramList.toTime,e.listCopy=JSON.parse(JSON.stringify(e.list)),e.isStatus=e.list.isStatus,e.category=e.list.category,e.isData=!0}),2e3)},e.prototype.openFilterSideBar=function(){this.searchKey="",this.list[this.selectedFilterTabType1]=this.listCopy[this.selectedFilterTabType1],this.openFilterBar=!this.openFilterBar},e.prototype.onCancel=function(){this.openFilterBar=!1},e.prototype.onRemoveFilter=function(e){"time"==e&&(this.fromTime=a().subtract(3,"hours").format("LT"),this.toTime=a().format("LT"),this.timeFilter=!1),delete this.allAppliedFilters[e],this.selectedValues=this.selectedValues.filter((function(t){return t.type!==e})),console.log(e,this.allAppliedFilters,this.selectedValues),this.applyFilters()},e.prototype.applyFilters=function(){this.isFiltersApplied=!0,this.openFilterBar=!1;var e={};this.selectedValues.forEach((function(t){e[t.type]=t.value})),this.timeFilter&&(e.time=this.fromTime+" to "+this.toTime),console.log(e),this.allAppliedFilters=e,this.filterKeys=Object.keys(this.allAppliedFilters),this.filterChange()},e.prototype.setTime=function(e,t){this.timeFilter=!0,"fromTime"===e?this.fromTime=t:this.toTime=t},e.prototype.filterChange=function(){var e={isFilter:!0,appliedFilterValues:this.allAppliedFilters,fromTime:this.timeFilter?this.fromTime:"",toTime:this.timeFilter?this.toTime:""};console.log(e),this.onFilterChange&&this.onFilterChange.emit(e)},e.prototype.openRestAppliedFilters=function(){this.isCountClicked=!0},e.prototype.selectedFilterTab=function(e){this.searchKey="";var t=l.findIndex(this.selectedValues,(function(t){return t.type==e}));t>-1&&(this.selectedCategory={type:e,value:this.selectedValues[t].value},this.selectFilter(this.selectedCategory.value,this.selectedCategory.type)),this.selectedFilterTabType1=e},e.prototype.isFilterExists=function(e){if(l.findIndex(this.selectedValues,(function(t){return t.type==e&&t.value}))>-1)return!0},e.prototype.selectFilter=function(e,t){var i={type:t,value:e},s=l.findIndex(this.selectedValues,(function(e){return e.type==t}));s>-1?(this.selectedValues[s].value=e,this.selectedCategory={type:t,value:this.selectedValues[s].value}):(this.selectedValues.push(i),this.selectedCategory={type:t,value:e}),console.log(this.selectedValues,this.selectedCategory)},e.prototype.resetAllFilters=function(){this.fromTime=a().subtract(3,"hours").format("LT"),this.toTime=a().format("LT"),this.isFiltersApplied=!1,this.timeFilter=!1,this.openFilterBar=!1,this.searchKey="",this.filterKeys="",this.allAppliedFilters={},this.selectedValues=[],this.selectedFilterTabType1=this.filterKeys1[0],this.selectedCategory={type:"",value:""},this.isCountClicked=!1,this.filterChange()},e.prototype.filterData=function(e){this.list[this.selectedFilterTabType1]=this.listCopy[this.selectedFilterTabType1];var t=this.list[this.selectedFilterTabType1];if(t&&t.length){var i=t.filter((function(t){return t.toLowerCase().startsWith(e.trim().toLowerCase())}));console.log(this.searchKey,e,"data=>"+i,this.list[this.selectedFilterTabType1]),this.list[this.selectedFilterTabType1]=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(p(arguments[t]));return e}(i)}},e}();c.decorators=[{type:t.Component,args:[{selector:"app-filter",template:'<div class="dispatch-filters display-flex">\n    <div class="display-flex">\n      <div *ngIf="filterKeys?.length"\n        [ngClass]="(filterKeys.length>2)?\'filter-list-container-2 flex-wrap\':\'filter-list-container-2\'">\n        <ng-container *ngIf="isCountClicked">\n          <div class="filter-list" *ngFor="let item of filterKeys;let i = index">\n            <span class="filter-list-data"> {{item | titlecase}} : {{allAppliedFilters[item]}} </span>\n            <span (click)="onRemoveFilter(item)" class="cancle-icon">\n              x\n            </span>\n          </div>\n        </ng-container>\n  \n  \n        <div class="filter-list" *ngIf="!isCountClicked">\n          <span  class="filter-list-data"> {{filterKeys[0] | titlecase}} : {{allAppliedFilters[filterKeys[0]]}} </span>\n          <span (click)="onRemoveFilter(filterKeys[0])" class="cancle-icon">\n            x\n          </span>\n        </div>\n  \n        <div class="filter-list" *ngIf="filterKeys?.length >= 2 && !isCountClicked">\n          <span  class="filter-list-data"> {{filterKeys[1] | titlecase}} : {{allAppliedFilters[filterKeys[1]]}} </span>\n          <span (click)="onRemoveFilter(filterKeys[1])" class="cancle-icon">\n            x\n          </span>\n        </div>\n  \n        <div (click)="openRestAppliedFilters()" class="filter-list cr-ptr"\n          *ngIf="filterKeys.length > 2 && !isCountClicked">\n          +{{filterKeys.length - 2}}\n        </div>\n  \n      </div>\n      <span\n        class="filter-color"\n        (click)="openFilterSideBar()">\n        <i class="fa fa-filter fa-2x icon-margin"></i>\n        \x3c!-- <span *ngIf="totalFilterCount">({{totalFilterCount}})</span>  --\x3e\n      </span>\n    </div>\n  \n    <div *ngIf="openFilterBar" class="filter-position-modal">\n      <div class="modalbody ele">\n        <div>\n          <div class="header-item">\n            <div>\n              Filter\n            </div>\n            <div class="cr-ptr">\n              <span (click)="resetAllFilters()" class="reset-filter">Reset</span>\n              <span (click)="onCancel()"><img class="cancle-icon-1" src="./../../assets/images/crossIcon.png"></span>\n            </div>\n          </div>\n          <hr>\n  \n          <div class="main-body">\n            <div class="side-bar-wrapper">\n              <div class="filter-side-menu">\n                <div \n                *ngFor="let filter of filterKeys1"  \n                [class.selected]="selectedFilterTabType1 === filter || isFilterExists(filter)"\n                (click)="selectedFilterTab(filter)" class="side-menu-tabs">\n                    {{filter | titlecase}}\n                </div>\n  \n                <div *ngIf="paramList?.fromTime && paramList?.toTime"\n                [class.selected]="selectedFilterTabType1 === \'time\' || timeFilter" (click)="selectedFilterTab(\'time\')"\n                class="side-menu-tabs">\n                Select Time\n               </div>\n              </div>\n            </div>\n  \n            <div class="vl"></div>\n  \n            <div class="filter-list-wrapper">\n              <div style="margin-left: 22px;" *ngIf="selectedFilterTabType1 !== \'time\'">\n              <input class="filter-search-option" type="text" placeholder="Search {{selectedFilterTabType1}}" matInput\n                [(ngModel)]="searchKey" (keyup)="filterData(searchKey)" />\n             </div>\n              <div  [ngClass]="(list[selectedFilterTabType1]?.length > 6) ? \'filter-data-list-scroll-2 filter-data-list\' : \'filter-data-list\'">\n                <div \n                *ngFor="let item of list[selectedFilterTabType1]"\n                class="filter-content"\n                (click)="selectFilter(item,selectedFilterTabType1)"\n                [class.selected]="selectedCategory.value === item"\n                >\n                    {{item}}\n                </div>\n  \n                <div *ngIf="paramList.selectedTab > 0 && selectedFilterTabType1==\'live status\'"\n                [ngClass]="(liveStatus?.length > 6) ? \'filter-data-list-scroll-2 filter-data-list\' : \'filter-data-list\'">\n                <div (click)="selectFilter(item,\'live status\')" [class.selected]="selectedCategory.value.value === item.value"\n                  *ngFor="let item of liveStatus" class="filter-content">\n                  {{item.name}}\n                </div>\n                </div>\n  \n                <ng-container *ngIf="paramList?.fromTime && paramList?.toTime && selectedFilterTabType1 === \'time\'">\n                  <div *ngIf="selectedFilterTabType === \'time\'" class="filter-data-list">\n                    <div class="time-input-wrapper">\n                      <label>From Time</label>\n                      <input matInput class="filter-time-input" [(ngModel)]="fromTime" [ngxTimepicker]="picker2"\n                        placeholder="From Time" readonly>\n                      <ngx-material-timepicker (timeSet)="setTime(\'fromTime\',$event)" #picker2></ngx-material-timepicker>\n                    </div>\n    \n                    <div class="time-input-wrapper">\n                      <label>To Time</label>\n                      <input style="margin-left: 26px;" matInput class="filter-time-input" [(ngModel)]="toTime"\n                        [ngxTimepicker]="picker3" placeholder="To Time" readonly>\n                      <ngx-material-timepicker (timeSet)="setTime(\'toTime\',$event)" #picker3></ngx-material-timepicker>\n                    </div>\n                  </div>\n                </ng-container>\n  \n  \n              </div>\n             \n              <div class="apply-btn">\n                <button (click)="applyFilters()" class="app-btn">\n                  <span>Apply</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ',styles:[".filter-modal-position-2{position:absolute;right:630px;top:109px}.filter-modal-position{position:absolute;right:474px;top:104px}.filter-modal-position-1{position:absolute;right:729px;top:109px}.modalbody{-moz-box-shadow:0 0 16px 0 rgba(0,0,0,.75);-webkit-box-shadow:0 0 16px 0 rgba(0,0,0,.75);background-color:#fff;border-radius:4px;box-shadow:0 0 16px 0 rgba(0,0,0,.75);display:flex;flex-direction:column;font-size:15px;height:400px;overflow:auto;position:fixed;width:400px;z-index:4}.ele{-webkit-animation:fadeIn .3s;-webkit-animation-fill-mode:forwards;animation:fadeIn .3s;animation-fill-mode:forwards;visibility:hidden}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1;visibility:visible}}@keyframes fadeIn{0%{opacity:0}to{opacity:1;visibility:visible}}.cancle-icon-1:hover{background-color:#f1f1f1;border-radius:50%;box-shadow:0 0 0 6px #f1f1f1}.header-item{display:flex;font-size:medium;justify-content:space-between;padding:10px 20px 0}.vl{border-left:1px solid grey;height:-webkit-fill-available;left:30%;margin-left:-4px;margin-top:38px;position:absolute;top:0}hr{margin-bottom:0}.side-menu-tabs{cursor:pointer;padding:14px 14px 14px 16px;width:116px}.side-menu-tabs:hover{background-color:#f1f1f1;color:#f28100}.side-bar-wrapper{width:117px}.main-body{display:flex}.filter-list-wrapper{width:100%}.filter-data-list{padding:10px}.filter-data-list-scroll-2{max-height:275px;overflow-y:scroll;padding:10px}.filter-content{cursor:pointer;padding:10px}.filter-content:hover{width:100%}.filter-content:hover,.filter-data-list .filter-content.selected{background-color:#f1f1f1;color:#f28100}.cr-ptr{cursor:pointer}.cr-ptr,.filter-side-menu .side-menu-tabs.selected{color:#f28100}.reset-filter{color:#f28100;margin-right:10px}.reset-filter:hover{background-color:#f1f1f1;border-radius:0;box-shadow:0 0 0 6px #f1f1f1}.filter-time-input{background:transparent;border:none;border-bottom:1px solid #999;font-size:14px;height:30px!important;height:30px;margin-left:8px;outline:none;padding:13px 9px;width:150px!important}.time-input-wrapper{padding:10px 0}.icon-margin{margin-right:10px;margin-top:-1px}.apply-btn{bottom:10px;position:absolute;right:12px}.filter-search-option{border:none;border-bottom:1px solid #f28100;font-size:14px;margin-bottom:5px;margin-right:20px;outline:none;padding-bottom:5px;padding-top:8px;width:-webkit-fill-available}.filter-list{border:1px solid #f28100;border-radius:12px;color:#000;display:flex;font-size:10px;height:26px;margin:2px;padding:3px 8px}.filter-list-data{-webkit-box-orient:vertical;-webkit-line-clamp:1;display:-webkit-box;overflow:hidden;text-overflow:ellipsis;width:125px}.filter-list-container-2{color:#f28100;display:flex;margin-left:auto;margin-right:5px;margin-top:-1px}.flex-wrap{flex-wrap:wrap;justify-content:flex-end;max-width:385px}.cancle-icon{color:#f28100;cursor:pointer;font-size:14px;font-size:13px;font-weight:700;font-weight:500;padding-left:5px;position:relative;top:-1px}.cancle-icon img{width:9px}.display-flex{display:flex}.filter-icon-position{color:#f28100;padding-right:15px}.filter-icon-position i{cursor:pointer}.filter-lst-show{display:flex;margin-left:auto}.filter-modal-position-3{position:absolute;right:569px;top:109px}.filter-color{color:#f28100;cursor:pointer}.dispatch-filters{position:relative}.dispatch-filters .filter-position-modal{position:absolute;right:430px;top:24px}"]}]}],c.ctorParameters=function(){return[]},c.propDecorators={list:[{type:t.Input}],paramList:[{type:t.Input}],onFilterChange:[{type:t.Output}]};var d=function(){};d.decorators=[{type:t.NgModule,args:[{declarations:[c],imports:[s.CommonModule,r.ReactiveFormsModule,r.FormsModule,n.NgxMaterialTimepickerModule],exports:[c]}]}],e.GenericListFilterComponent=c,e.GenericListFilterModule=d,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=generic-list-filter.umd.min.js.map